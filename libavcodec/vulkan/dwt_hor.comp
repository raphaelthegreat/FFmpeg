#extension GL_EXT_scalar_block_layout : require

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(std430, buffer_reference, buffer_reference_align = 4) buffer DwtCoef {
    uint coef_buf[];
};

layout(push_constant, scalar) uniform ComputeInfo {
    int wavelet_depth;
    int s;
    int stride;
    int diff_offset;
    ivec2 work_area;
    DwtCoef dst_buf[3];
    DwtCoef src_buf[3];
};

void main() {
    ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    if (any(greaterThanEqual(coord, work_area))) {
        return;
    }

    /* For horizontal synth pass, each invocation handles a horizontal pair of pixels */
    uint plane_idx = gl_LocalInvocationID.z;
    ivec2 coord_x = coord << ivec2(1, 0);
    uint a = src_buf[plane_idx].coef_buf[coord_x.y * stride + coord_x.x];
    uint b = src_buf[plane_idx].coef_buf[coord_x.y * stride + coord_x.x + 1];
    uint dst_b = (b - a) * (1 << s);
    uint dst_a = a * (1 << s) + ((dst_b + 1) >> 1);
    dst_buf[plane_idx].coef_buf[coord_x.y * stride + coord_x.x] = dst_a;
    dst_buf[plane_idx].coef_buf[coord_x.y * stride + coord_x.x + 1] = dst_b;
}
