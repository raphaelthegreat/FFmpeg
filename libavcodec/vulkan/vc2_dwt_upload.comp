#extension GL_EXT_scalar_block_layout : require
#extension GL_EXT_shader_explicit_arithmetic_types : require
#extension GL_EXT_buffer_reference : require
#extension GL_EXT_debug_printf : require

struct Plane {
    ivec2 dim;
    ivec2 dwt_dim;
};

layout(push_constant, scalar) uniform ComputeInfo {
    int s;
    int diff_offset;
    int level;
    Plane planes[3];
};

void main()
{
    ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    uint plane_idx = gl_GlobalInvocationID.z;
    ivec2 coord_i = clamp(coord, ivec2(0), planes[plane_idx].dim);
    uint texel = imageLoad(planes0[plane_idx], coord_i).x;
    int result = int(texel - diff_offset);
    imageStore(planes1[plane_idx], coord_i, ivec4(result));
}
